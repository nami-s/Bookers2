@ルートパスの設定
@ユーザ名・メール・パスワードで、ユーザの新規登録が出来るよう設定
@ログイン前/ログイン済の状態によってヘッダーの内容が変わるよう設定
@ログインしていない場合→Home.About.signup.loginのリンク
@ログイン済みの場合→Home.Users.Books.logoutのリンク

@ユーザに関するモデル名→User
@Userモデルのカラム名→name.introduction.profile_image_id

@ユーザ名とパスワードでログイン出来るように設定

@投稿データのモデル名→Book
@Bookモデルのカラム名→title.body.user_id

@ユーザ機能関連、投稿機能関連のルーティング→resources
@自分のプロフィールを追加登録や編集できるように設定する
@名前
@画像（写真を登録できるようにする。登録していない場合、任意のNoImageを表示させる）
@自己紹介文

Homeページ（usersのshow（ログインしているユーザ[自分]）ページ）
@ログインしてるユーザ（自分）のプロフィール表示
@ログインしてるユーザ（自分）のプロフィール編集ページへのリンク→userのeditページ→updateしたらuserのshowページ
@新規投稿できるフォーム→新規投稿したやつの詳細ページ
@自分が投稿したやつだけ表示する（投稿したユーザ（自分）のアイコン.title.opinion）
@titleのところにリンク→booksの詳細ページ（show）

Usersページ（usersのindexページ）
@ログインしてるユーザ（自分）のプロフィール表示
@ログインしてるユーザ（自分）のプロフィール編集ページへのリンク
@新規投稿できるフォーム
@ログインしてるユーザ一覧、showというリンク作成→そのユーザのshowページ

Booksページ（booksのindexページ）
@ログインしてるユーザ（自分）のプロフィール表示
@ログインしてるユーザ（自分）のプロフィール編集ページへのリンク
@新規投稿できるフォーム
@投稿一覧（投稿したユーザのアイコン.title.opunion）
ユーザアイコンのところにリンク→投稿したユーザのshowページ
@titleのところにリンク→booksの詳細ページ（show）

@ユーザがログインしてない場合はログイン画面だけが表示されるように設定

userモデルのカラムのバリデーション設定
有効でない場合はバリデーションエラーを返す
　@name→一意性を持たせ、かつ2〜20文字の範囲で設定
　@introduction→最大50文字まで
　
Bookモデルのカラムのバリデーション設定
有効でない場合はバリデーションエラーを返す
　@title→空でないように設定
　@body→空でない、最大200文字までに設定
　
サクセスメッセージの表示（successfullyの言葉を含まれるようにする）
　@ユーザ新規登録
　@ユーザログイン
　@ユーザログアウト
　@ユーザのプロフィール更新
　@投稿データの新規投稿
　@投稿データの更新
　
処理失敗時エラーメッセージを表示する（erroeの文字を含まれるようにする）
　@ユーザ新規登録
　@ユーザのプロフィール更新
　@投稿データの新規投稿
　@投稿データの更新
　
URLを入力しても他のユーザが投稿した投稿の編集画面、他のユーザの編集画面には遷移できないように設定

投稿データは投稿者のみ編集、削除が出来るように設定

レイアウト
home
@top
@about

books
@index
show
edit

users
@index
@show
edit
@_profile

device
@log in
@sign in